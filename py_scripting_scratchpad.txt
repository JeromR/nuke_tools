#---- Nuke Python API
#https://learn.foundry.com/nuke/developers/70/pythonreference/

#---- Nuke Python Developer's Guide
#https://learn.foundry.com/nuke/developers/11.2/pythondevguide/

#----------------------------------------------
def hello_world():
	print("hello world!")
hello_world()

#----------------------------------------------
nuke.pluginPath()

#----------------------------------------------
print(QtCore.QResource(':/qrc/images').children())
print(QtCore.QResource(':/ui/qrc/images').children())
print(QtCore.QResource(':/Resources/Images').children())
for item in QtCore.QResource(':/Resources/Images').children():
	print(item)
for icon in QtCore.QResource(':qrc/images').children():
	name = os.path.splitext(icon.split('/')[-1] )[0]
	iconString = '<img src=":qrc/images/%s">' % (icon)
	print(icon)

#----------------------------------------------
myGroup = nuke.toNode('Group15')
myGroup.begin()
nuke.selectedNode().knob('output').setEnabled(False)
nuke.selectedNode().knob('Bchannels').setEnabled(False)
myGroup.end()

#----------------------------------------------
myNodes = nuke.selectedNodes()
print myNodes
for item in myNodes:
	try: aovList = []
for currentNode in nuke.allNodes('Group'):
	if 'AovBundle' in currentNode.knob('name').value():
    	aovList.append(currentNode)
print(aovList)
    	if item.knob('hide_input').value() == 1:
        	item.knob('hide_input').setValue(0)
	except:
    	pass

#----------------------------------------------
print(nuke.toNode('BackdropNode20').Class())
print(nuke.toNode('BackdropNode20').knob('bdwidth').value())
print(nuke.toNode('BackdropNode20').knob('bdheight').value())

#----------------------------------------------
aovList = []
for currentNode in nuke.allNodes('Group'):
	if 'AovBundle' in currentNode.knob('name').value():
    	aovList.append(currentNode)
for aovBundle in aovList:
	if aovBundle.knob('on_error').value() == 'error':
    	aovBundle.knob('on_error').setValue('nearest frame')

#----------------------------------------------
print(nuke.toNode('Group6').inputs())

#----------------------------------------------
for currentNode in nuke.allNodes('Read'):
	if currentNode.knob('on_error').value() == 'error':
    	currentNode.knob('on_error').setValue('nearest frame')

#----------------------------------------------
myGroup=nuke.toNode('Group6')
myGroup.begin()
print(nuke.toParent().knob('overlay_layer'))
myGroup.end()

#----------------------------------------------
print(nuke.selectedNode().knob('overlay_layer'))
print(nuke.selectedNode().Class())

#----------------------------------------------
aovList = []
for currentNode in nuke.allNodes('Group'):
	if 'AovBundle' in currentNode.knob('name').value():
    	aovList.append(currentNode)
for aovBundle in aovList:
	if aovBundle.knob('localizationPolicy').value() != 'on':
    	aovBundle.knob('localizationPolicy').setValue('on')
deepList = []
for currentNode in nuke.allNodes('DeepRead'):
	deepList.append(currentNode)
for deep in deepList:
	if deep.knob('localizationPolicy').value() != 'on':
    	deep.knob('localizationPolicy').setValue('on')

for node in nuke.allNodes('Read'):
	if node.knob('localizationPolicy').value() != 'on':
    	node.knob('localizationPolicy').setValue('on')
readList= nuke.allNodes('Read')
print(readList)
